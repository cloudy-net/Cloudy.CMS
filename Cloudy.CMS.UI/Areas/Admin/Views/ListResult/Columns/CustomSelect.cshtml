@using Cloudy.CMS.UI.FieldSupport.CustomSelect;
@using Cloudy.CMS.UI.List
@model ListColumnViewModel

@inject IServiceProvider serviceProvider

@{
    if (Model.Value == null)
    {
        return;
    }

    var selectAttribute = Model.PropertyDefinition.Attributes.OfType<ICustomSelectAttribute>().FirstOrDefault();
    var factoryType = selectAttribute.GetType().GenericTypeArguments.FirstOrDefault();
    var factory = serviceProvider.GetService(factoryType) as ICustomSelectFactory;
    var items = await factory.GetItems();

    string friendlyValue = null;
    if (Model.PropertyDefinition.List)
    {
        var selectedValues = Model.Value as IList<string>;
        if (selectedValues is not null)
        {
            friendlyValue = string.Join(", ", items.Where(i => selectedValues.Contains(i.Value)).Select(i => i.Text).Order());
        }
    }
    else
    {
        friendlyValue = items.FirstOrDefault(x => x.Value == Model.Value?.ToString())?.Text;   
    }

    if (friendlyValue != null)
    {
        @friendlyValue
    }
    else
    {
        <i>Does not exist</i>
    }
}
