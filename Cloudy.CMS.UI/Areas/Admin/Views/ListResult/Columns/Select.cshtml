@using Cloudy.CMS.EntitySupport
@using Cloudy.CMS.ContextSupport
@using Cloudy.CMS.EntityTypeSupport
@using Cloudy.CMS.Naming
@using Cloudy.CMS.UI.Extensions
@using Cloudy.CMS.UI.FieldSupport.Select
@using Cloudy.CMS.UI.List
@model ListColumnViewModel

@inject IEntityTypeProvider EntityTypeProvider
@inject IContextCreator ContextCreator
@inject INameGetter NameGetter

@{
    var selectType = Model.PropertyDefinition.GetSelectAttributeType();
    var type = EntityTypeProvider.Get(selectType);
    var context = ContextCreator.CreateFor(type.Type);

    if (Model.Value == null)
    {
        return;
    }

    if (Model.Value.Equals(Activator.CreateInstance(Model.Value.GetType())))
    {
        return;
    }

    var instance = await context.Context.FindAsync(type.Type, Model.Value).ConfigureAwait(false);

    var image = (instance as IImageable)?.Image;

    if (image != null)
    {
        <img class="list-image-in-name" src="@image" alt="" />
    }

    var name = NameGetter.GetName(instance);

    if (name != null)
    {
        @name
    }
    else
    {
        <i>Does not exist</i>
    }
}
